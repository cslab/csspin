# Schema definitions for spin.
#
# 'internal'     --> Settings must not come from a configuration file, can only
#                    be set internally. FIXME: That is not implemented.
#
# Attributes with the following types will be converted to specific Python types
# and assigned to the global configuration tree.
#
# 'object'       --> dict/ConfigTree that contains key-values pairs
# 'path'         --> values will be converted Path objects from the path package
# 'list'         --> literal list, i.e. list containing only strings
# 'str'          --> literal/string
# 'float'        --> floating point number
# 'int'          --> integer value
#

minimum-spin:
  type: str internal
  help: |
    The minimal version of spin, that can process this spinfile. This
    property is required.

spin:
  type: object
  help: |
    Settings required for running spin. Many of these cannot be set
    via a spinfile or via the command line, but are computed by spin.
  noindex:
  properties:
    spinfile:
      type: path
      help: |
        The name of the configuration file for the project. This can
        be overridden via 'spin -f <filename>'.
      default: spinfile.yaml
    env_base:
      type: path internal
      help: |
        Where environments are provisioned.
      default: "{spin.project_root}/{spin.spin_dir}"
    project_root:
      type: path internal
      help: |
        The absolute path to the project directory.
      default: .spin
    spin_dir:
      type: path internal
      help: |
        The relative path from <project_root> to spin's project
        related data.
      default: .spin
    launch_dir:
      type: path internal
      help: TODO
      # default is set during runtime
    spin_global_plugins:
      type: path internal
      default: "{SPIN_CACHE}/plugins"
    plugin_dir:
      type: path internal
      default: "{spin.env_base}/plugins"
      help: Path that contains all installed plugins
    cache:
      type: path internal
      default: "{SPIN_CACHE}"
      help: Path that points to spins cache
    config:
      type: path internal
      default: "{SPIN_CONFIG}"
      help: Path where to store global configuration for spin
    version:
      type: str internal
      help: The version of cs.spin that is being used.
    project_name:
      type: str internal
      help: The project that is spin running on
    project_hash:
      type: str internal
      help: The hash of the project that is spin running on
  # FIXME: That was never implemented. Do we want that?
  # Disallow plugins or user setting to write to the 'spin' context to
  # keep sanity.
  unknown-properties: false

# FIXME: Move to the plugins sources as soon as non-builtin
node:
  type: object
  help: Configuration of the Node built-in plugin.
  properties:
    version:
      type: str
      help: NodeJS version
    use:
      type: path
      help: Alternative path to a local NodeJS executable
    mirror:
      type: str
      help: Proxy to get NodeJS sources from
    ignore_ssl_certs:
      type: bool
      help: If enabled, ignoring SSL certificate validation checks.
      default: False
    memo:
      type: path
      help: TODO
      # The default here must be defined in the module as long as node is
      # built-in, since builtin plugins can't rely on external plugins.
      # default: "{python.venv}/nodeversions.memo"
    requires:
      type: object
      help: Dependencies of the node plugin
      properties:
        spin:
          type: list
          help: Spin dependencies of the node plugin
          default: [spin_python.python]
        python:
          type: list
          help: Python dependencies of the node plugin
          default: [nodeenv]
        npm:
          type: list
          help: npm dependencies of the node plugin
          default: [saas, yarn]

extra-tasks:
  type: object
  help: |
    `extra-tasks` maps task names to task definitions, where task
    definitions support ``env`` and ``script`` keys.

quiet:
  type: bool
  default: false
  help: |
    Spin normally echos the verbatim commands it runs. When `quiet` is
    set, this output is suppressed. Additionally, some plugins use
    `quiet` to suppress more output of the tools they run.

verbose:
  type: bool
  default: false
  help: |
    When `verbose` is on, spin outputs additional information, like
    the time spent running tasks. Some plugins use `verbose` to make
    tools more chatty.

hooks:
  type: object
  help: |
    A dictionary mapping workflow names to lists of commands. This is
    automatically set up by the `when` argument to
    :py:func:`spin.task`.

plugins:
  type: list
  help: |
    The list of plugins to import.

plugin-packages:
  type: list
  help: |
    A list of plugin packages to install. Supports the same
    requirements specifiers as pip, including URLs, local file names
    and PEP 440 specifiers.

platform:
  type: object
  help: TDB
  properties:
    exe:
      type: path
      help: TDB
    shell:
      type: path
      help: TDB
