# Schema definitions for spin.

# 'path' --> values will be converted to py.path objects

# 'internal' --> settings must not come from a configuration file, can
# only be set internally

# 'usersetting' --> can only(?) be set via a configuration file; it
# would be a bug, if the code does it

# 'list' --> a literal list *or* simply a string that is space-split

minimum-spin:
  type: str internal
  help: |
    The minimal version of spin, that can process this spinfile. This
    property is required.

spin:
  type: object
  help: |
    Settings required for running spin. Many of these cannot be set
    via a spinfile or via the command line, but are computed by spin.
  properties:
    spinfile:
      type: path
      help: |
        The name of the configuration file for the project. This can
        be overriden via 'spin -f <filename>'.
      default: spinfile.yaml
    env_base:
      type: path internal
      help: |
        Where environments are provisioned.
      default: "{spin.userprofile}/{spin.project_hash}"
    project_root:
      type: path internal
      help: |
        The absolute path to the project directory.
      default: .spin
    spin_dir:
      type: path internal
      help: |
        The relative path from <project_root> to spin's project
        related data.
      default: .spin
    spin_global:
      type: path internal
      help: |
        User settings that will apply to all projects are read from
        this file.
      default: "{spin.userprofile}/global.yaml"
    spin_global_plugins:
      type: path internal
      default: "{spin.userprofile}/plugins"
    plugin_dir:
      type: path internal
      default: "{spin.spin_dir}/plugins"
    plugin_packages:
      type: list
    cruise_spin:
      type: path
      default: spin
    userprofile:
      type: path internal
  # disallow plugins or user setting to write to the 'spin' context to
  # keep sanity
  unknown-properties: false

requirements:
  type: list usersetting
  help: |
    The list of this project's external Python requirements, that have
    to be installed into the project's virtual environment. This
    excludes requirements stated as 'install_requires' in
    setup.py/setup.cfg.

extra-tasks:
  type: object

quiet:
  type: boolean

verbose:
  type: boolean
  default: false

hooks:
  type: object

cruise:
  type: object

plugins:
  type: list

platform:
  type: object
  properties:
    exe:
      type: path
    shell:
      type: path

virtualenv:
  type: object
  properties:
    venv:
      type: path
