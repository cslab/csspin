# -*- mode: yaml; coding: utf-8 -*-

include:
  - project: qs/cs.template
    ref: v15.9.0.3
    file:
      - ci/common.yml
      - ci/pre-commit.yml
      - ci/release.yml
      - ci/analyze.yml

# --------------------------------- Build stage --------------------------------
wheel:
  stage: build
  image: registry.contact.de/cetest:16.0-1.latest
  variables:
    # The version generation via setuptools_scm needs
    # (potentially) the whole SCM history to work correctly
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
  script:
    - pip install -e .
    - spin -v --provision -p python.use=python python:wheel
    - spin -v -p sphinx.build_dir=_build docs html
  artifacts:
    when: always
    expire_in: 72 hrs
    paths:
      - dist/*.whl
      - docs/_build/html
  interruptible: true

# --------------------------------- Test stage ---------------------------------
pre-commit:
  extends: .run_precommit
  needs: []

.test_base:
  needs: []
  script:
    - pip install -e .
    - spin --provision -p python.use=python -p pytest.opts="['--cov-report', 'term', '--cov-report', 'xml:coverage-${CI_JOB_ID}.xml', '--junitxml', 'reports-${CI_JOB_ID}/pytest.xml']" test -vv --coverage
  artifacts:
    when: always
    expire_in: 24 hrs
    paths:
      - ./coverage*.xml
      - reports*/
    reports:
      junit: reports*/*.xml
      coverage_report:
        coverage_format: cobertura
        path: ./coverage*.xml
  interruptible: true

python3.9:
  extends: [.test_base]
  image: python:3.9

python3.10:
  extends: [.test_base]
  image: python:3.10

python3.11:
  extends: [.test_base]
  image: python:3.11

python3.12:
  extends: [.test_base]
  image: python:3.12

windows:
  extends: [.test_base]
  tags: ["Powershell", "Python3"]
  before_script:
    - "& python.exe -m venv venv"
    - venv\Scripts\activate.ps1
    - pip install -e .
  script:
    - spin --provision -p pytest.opts="['--cov-report', 'term', '--cov-report', 'xml:coverage-$env:CI_JOB_ID.xml', '--junitxml', 'reports-$env:CI_JOB_ID/pytest.xml']" test -vv --coverage

# ---------------------------- Deploy/Analyze stage ----------------------------
analyze:
  extends: .analyze
  variables:
    SOURCE_DIRS: src tests
    PYLINTRC: pyproject.toml
  needs:
    - python3.9
    - python3.10
    - python3.11
    - python3.12
    - windows

# ------------------------------- Release stage --------------------------------
.release_deps:
  needs:
    - wheel
    - job: analyze
      artifacts: false

conpi:
  extends: [.upload_conpi_prod, .release_deps]
  variables:
    PYPI_INDEX: tools/stable

pages:
  extends: [.release_deps]
  image: alpine
  stage: release
  script:
    - mv docs/_build/html public
  artifacts:
    paths:
      - public
  interruptible: false
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v(\d+\.)?\d+\.\d+\.\w+$/'
